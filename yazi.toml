[manager]
layout = [0, 4, 3]
sort_sensitive = true
sort_reverse = true
sort_dir_first = true
linemode = "mtime"
show_hidden = true
show_symlink = true

[preview]
tab_size = 2
max_width = 600
max_height = 1000
cache_dir = ""
ueberzug_scale = 1
ueberzug_offset = [0, 0, 0, 0]

[opener]
edit = [{ run = '$EDITOR "$@"', block = true, for = "unix" }, { run = '''
  "hx %*"
''', block = true, for = "windows" }]
open = [
  { run = 'xdg-open "$@"', desc = "Open", for = "linux" },
  { run = 'open "$@"', desc = "Open", for = "macos" },
  { run = 'start "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
  { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
  { run = 'explorer /select,%1', orphan = true, desc = "Reveal", for = "windows" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
  { run = 'unar "$1"', desc = "Extract here", for = "unix" },
  { run = 'unar "%1"', desc = "Extract here", for = "windows" },
]
play = [
  { run = 'mpv "$@"', orphan = true, for = "unix" },
  { run = 'start "%1"', orphan = true, for = "windows" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show media info", for = "unix" },
]



[open]
rules = [
  { name = "*/", use = [
    "edit",
    "open",
    "reveal",
  ] },

  { mime = "text/*", use = [
    "edit",
    "reveal",
  ] },
  { mime = "image/*", use = [
    "open",
    "reveal",
  ] },
  { mime = "video/*", use = [
    "play",
    "reveal",
  ] },
  { mime = "audio/*", use = [
    "play",
    "reveal",
  ] },
  { mime = "inode/x-empty", use = [
    "edit",
    "reveal",
  ] },

  { mime = "application/json", use = [
    "edit",
    "reveal",
  ] },
  { mime = "*/javascript", use = [
    "edit",
    "reveal",
  ] },

  { mime = "application/zip", use = [
    "extract",
    "reveal",
  ] },
  { mime = "application/gzip", use = [
    "extract",
    "reveal",
  ] },
  { mime = "application/x-tar", use = [
    "extract",
    "reveal",
  ] },
  { mime = "application/x-bzip", use = [
    "extract",
    "reveal",
  ] },
  { mime = "application/x-bzip2", use = [
    "extract",
    "reveal",
  ] },
  { mime = "application/x-7z-compressed", use = [
    "extract",
    "reveal",
  ] },
  { mime = "application/x-rar", use = [
    "extract",
    "reveal",
  ] },
  # PowerShell Scripts
  { mime = "text/x-powershell", use = [
    "edit",
    "reveal",
  ] },
  { mime = "application/x-powershell", use = [
    "edit",
    "reveal",
  ] },
  #
  # Batch Files
  { mime = "application/bat", use = [
    "edit",
    "reveal",
  ] },
  { mime = "application/x-bat", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/plain", name = "*.bat", use = [
    "edit",
    "reveal",
  ] },

  # Text Files
  { mime = "text/plain", use = [
    "edit",
    "reveal",
  ] },

  # .config Files
  { mime = "application/xml", name = "*.config", use = [
    "edit",
    "reveal",
  ] },

  # Makefiles
  { mime = "text/x-makefile", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/plain", name = "Makefile", use = [
    "edit",
    "reveal",
  ] },

  # Dockerfiles
  { mime = "text/x-dockerfile", use = [
    "edit",
    "reveal",
  ] },
  #
  # INI Files
  { mime = "text/plain", name = "*.ini", use = [
    "edit",
    "reveal",
  ] },

  # .env Files
  { mime = "text/plain", name = "*.env", use = [
    "edit",
    "reveal",
  ] },

  # Java Properties Files
  { mime = "text/x-java-properties", use = [
    "edit",
    "reveal",
  ] },

  # Apache Configuration Files (.htaccess)
  { mime = "text/plain", name = ".htaccess", use = [
    "edit",
    "reveal",
  ] },

  # Shell Profiles (like .bashrc, .zshrc)
  { mime = "application/x-shellscript", name = ".*rc", use = [
    "edit",
    "reveal",
  ] },

  # Git Configuration Files (.gitignore, .gitconfig)
  { mime = "text/plain", name = ".gitignore", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/plain", name = ".gitconfig", use = [
    "edit",
    "reveal",
  ] },

  # Vim Configuration Files (.vimrc)
  { mime = "text/plain", name = ".vimrc", use = [
    "edit",
    "reveal",
  ] },

  # C and C++
  { mime = "text/x-c", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/x-c++", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/x-chdr", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/x-c++hdr", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/x-csrc", use = [
    "edit",
    "reveal",
  ] },
  { mime = "text/x-c++src", use = [
    "edit",
    "reveal",
  ] },

  # C#
  { mime = "text/x-csharp", use = [
    "edit",
    "reveal",
  ] },

  # Java
  { mime = "text/x-java", use = [
    "edit",
    "reveal",
  ] },

  # Python
  { mime = "text/x-python", use = [
    "edit",
    "reveal",
  ] },

  # TypeScript
  { mime = "application/typescript", use = [
    "edit",
    "reveal",
  ] },

  # PHP
  { mime = "application/x-httpd-php", use = [
    "edit",
    "reveal",
  ] },

  # Ruby
  { mime = "application/x-ruby", use = [
    "edit",
    "reveal",
  ] },

  # Go
  { mime = "text/x-go", use = [
    "edit",
    "reveal",
  ] },

  # Rust
  { mime = "text/rust", use = [
    "edit",
    "reveal",
  ] },

  # Shell Scripts
  { mime = "application/x-shellscript", use = [
    "edit",
    "reveal",
  ] },

  # Perl
  { mime = "text/x-perl", use = [
    "edit",
    "reveal",
  ] },

  # Lua
  { mime = "text/x-lua", use = [
    "edit",
    "reveal",
  ] },

  # YAML
  { mime = "text/yaml", use = [
    "edit",
    "reveal",
  ] },

  # TOML
  { mime = "application/toml", use = [
    "edit",
    "reveal",
  ] },

  # JSON
  { mime = "application/json", use = [
    "edit",
    "reveal",
  ] },

  # XML
  { mime = "application/xml", use = [
    "edit",
    "reveal",
  ] },

  # HTML
  { mime = "text/html", use = [
    "edit",
    "reveal",
  ] },

  # CSS
  { mime = "text/css", use = [
    "edit",
    "reveal",
  ] },

  # Markdown
  { mime = "text/markdown", use = [
    "edit",
    "reveal",
  ] },

  # SQL
  { mime = "application/sql", use = [
    "edit",
    "reveal",
  ] },

  # Bash/Zsh
  { mime = "application/x-shellscript", use = [
    "edit",
    "reveal",
  ] },
  { mime = "*", use = [
    "open",
    "reveal",
  ] },

]

[tasks]
micro_workers = 5
macro_workers = 10
bizarre_retry = 5
image_alloc = 536870912 # 512MB
image_bound = [0, 0]

[plugins]
preload = []

[input]
# cd
cd_title = "Change directory:"
cd_origin = "top-center"
cd_offset = [0, 2, 50, 3]

# create
create_title = ["Create:", "Create (dir):"]
create_origin = "top-center"
create_offset = [0, 2, 50, 3]

# rename
rename_title = "Rename:"
rename_origin = "hovered"
rename_offset = [0, 1, 50, 3]

# trash
trash_title = "Move {n} selected file{s} to trash? (y/N)"
trash_origin = "top-center"
trash_offset = [0, 2, 50, 3]

# delete
delete_title = "Delete {n} selected file{s} permanently? (y/N)"
delete_origin = "top-center"
delete_offset = [0, 2, 50, 3]

# find
find_title = ["Find next:", "Find previous:"]
find_origin = "top-center"
find_offset = [0, 2, 50, 3]

# search
search_title = "Search:"
search_origin = "top-center"
search_offset = [0, 2, 50, 3]

# shell
shell_title = ["Shell:", "Shell (block):"]
shell_origin = "top-center"
shell_offset = [0, 2, 50, 3]

# overwrite
overwrite_title = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [0, 2, 50, 3]

# quit
quit_title = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [0, 2, 50, 3]
#
# [[input.prepend_keymap]]
# 	on   = "e"
#   run = "shell --block --confirm 'hx .'"
# 	desc = "open dir"
#
#

[select]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[log]
enabled = true
